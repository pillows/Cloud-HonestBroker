<!DOCTYPE html>
<html>
<head>

    <link href="css/style.css" rel="stylesheet"/>
    <link href="css/skeleton.css" rel="stylesheet"/>
</head>
<body>

<div>
    <span>Settings</span>

    <div>
        <span>Maximum numbers allowed in transit</span><input type="text" value="8"/>
    </div>
    <div>
        <span>Largest filesize allowed for upload</span><input type="text" value="1GB"/>
    </div>


</div>

<br  />
<div class="container">
    <div class="row">
        <div class="four columns">
            <div id="domain1">
                <span>Domain 1</span>

                    <div>
                        VM1:<span id="vm1" class="circle_green">
                        </span>
                    </div>

                    <div>
                        VM2:<span id="vm2" class="circle_red">
                        </span>
                    </div>
                    <div>
                        VM3:<span id="vm3" class="circle_green">
                        </span>
                    </div>


                    <div style="padding-left:20px"><span>Layer 2</span>
                        <meter class="layer2" style="" min="0" max="1" value=".25">25%</meter> 25% used
                    </div>
                    <div style="padding-left:20px"><span>Layer 3</span>
                        <meter class="layer3" style="" min="0" max="1" value=".25">25%</meter> 25% used
                    </div>

            </div>
            <br  />
            <div id="domain2">
                <span>Domain 2</span>
                <div>
                    VM1:<span id="vm4" class="circle_green">
                    </span>
                </div>

                <div>
                    VM2:<span id="vm5" class="circle_red">
                    </span>
                </div>
                <div>
                    VM3:<span id="vm6" class="circle_green">
                    </span>
                </div>
                <div style="padding-left:20px"><span>Layer 2</span>
                    <meter class="layer2" style="" min="0" max="1" value=".25">25%</meter> 25% used
                </div>
                <div style="padding-left:20px"><span>Layer 3</span>
                    <meter class="layer3" style="" min="0" max="1" value=".25">25%</meter> 25% used
                </div>
            </div>
            <br  />
            <div id="domain3">
                <span>Domain 3</span>
                <div>
                    VM1:<span id="vm7" class="circle_green">
                    </span>
                </div>

                <div>
                    VM2:<span id="vm8" class="circle_red">
                    </span>
                </div>
                <div>
                    VM3:<span id="vm9" class="circle_green">
                    </span>
                </div>
                <div style="padding-left:20px"><span>Layer 2</span>
                    <meter class="layer2" style="" min="0" max="1" value=".25">25%</meter> 25% used
                </div>
                <div style="padding-left:20px"><span>Layer 3</span>
                    <meter class="layer3" style="" min="0" max="1" value=".25">25%</meter> 25% used
                </div>

                <button id="refresh">Refresh</button>
            </div>
        </div>
        <div class="eight columns">
            <table id="jobs" class="layout display responsive-table">
                <thead>
                    <tr>
                        <th>Person</th>
                        <th>Job name</th>
                        <th>Size of Job</th>
                        <th>Security Specs</th>
                        <th>Current Processing time</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- <tr>
                        <td class="jobdata">Shelly</td>
                        <td class="jobdata">Bio lab results</td>
                        <td class="jobdata">500MB</td>
                        <td class="jobdata">DCL1</td>
                        <td class="jobdata">0:00</td>

                    </tr>
                    <tr>
                        <td class="jobdata">Shelly</td>
                        <td class="jobdata">Bio lab results</td>
                        <td class="jobdata">500MB</td>
                        <td class="jobdata">DCL1</td>
                        <td class="jobdata">0:00</td>

                    </tr>
                    <tr>
                        <td class="jobdata">Shelly</td>
                        <td class="jobdata">Bio lab results</td>
                        <td class="jobdata">500MB</td>
                        <td class="jobdata">DCL1</td>
                        <td class="jobdata">0:00</td>

                    </tr>
                    <tr>
                        <td class="jobdata">Shelly</td>
                        <td class="jobdata">Bio lab results</td>
                        <td class="jobdata">500MB</td>
                        <td class="jobdata">DCL1</td>
                        <td class="jobdata">0:00</td>

                    </tr> -->
                </tbody>
            </table>
        </div>
        <div class="six columns">
        </div>
    </div>
</div>

<script type="text/javascript">

let busyCheck = (vm, busy) => {
    if(busy){
        if(vm.classList.contains("circle_green")){
            vm.className = "circle_red";
        }
    }
    else{
        if(vm.classList.contains("circle_red")){
            vm.className = "circle_green";
        }
    }
}

let layerUpdate = (domain, layer) => {
    let meters = document.getElementById(domain).getElementsByTagName("meter")
    // console.log(layer)
    for(let i = 0; i < 2; i++){
        meters[i].value = layer[i]
        // console.log(meters[i].value);
        // console.log(layer[i])
    }

}

let populateTable = (jobs) => {
    console.log(jobs)
    let table = document.getElementById("jobs");
    for(let i = 0; i < jobs.length; i++){
        // console.log(jobs[i].job_owner)
        let row = document.createElement("tr")
        // table.appendChild(row)
        //
        let person = document.createElement('td');
        person.innerHTML = jobs[i].job_owner
        let job_name = document.createElement('td');
        job_name.innerHTML = jobs[i].job_name

        let size_of_job =  document.createElement('td');
        size_of_job.innerHTML = jobs[i].job_size
        let sspec = document.createElement('td');
        sspec.innerHTML = jobs[i].job_security
        let processing_time = document.createElement('td');
        processing_time.innerHTML = "0"

        row.appendChild(person)
        row.appendChild(job_name)
        row.appendChild(size_of_job)
        row.appendChild(sspec)
        row.appendChild(processing_time)

        table.appendChild(row)

    }
    return "1"
}

let cpuUpdate = (servers) => {
    for(let i = 0; i < servers.length; i++){
        let cpu = servers[i].cpu;
        let server = document.getElementById(servers[i].name)
        let cpuStat = server.getElementsByTagName("div")
        cpuStat.innerHTML = cpu
    }
}

let updateStats = (data) => {

    // let jobs = data.jobs
    // populateTable(jobs)
    // console.log(data[0])
    for(let i = 0; i < data.status.length; i++){
        let domain = data.status[i].domain
        for(let j = 0; j < data.status[i].vms.length; j++){

            let vm = document.getElementById(data.status[i].vms[j].name)
            let busy = data.status[i].vms[j].busy
            // console.log("busy status ", busy)
            let layers = data.status[i].layers

            // console.log(jobs)

            // console.log(document.getElementById(domain))
            busyCheck(vm, busy);
            layerUpdate(domain, layers)

            // cpuUpdate(cpus)

            // console.log(data[i].layers)
            // console.log(vm.classList)

        }
    }
}
let element = document.getElementById("refresh");
element.addEventListener('click', function() { /* do stuff here*/
    fetch("/network-stats") // Call the fetch function passing the url of the API as a parameter
    .then(
  function(response) {
    if (response.status !== 200) {
      console.log('Looks like there was a problem. Status Code: ' +
        response.status);
      return;
    }

    // Examine the text in the response
    response.json().then(function(data) {
      updateStats(data);
      populateTable(data.jobs)
    });
  }
)
.catch(function(err) {
  console.log('Fetch Error :-S', err);
});

});





</script>
</body>
</html>
