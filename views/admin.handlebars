<!DOCTYPE html>
<html>
<head>
    <style type="text/css">

    .circle_green {

      padding: 10px 11px;
      background: green;
      height: 2px;
      border-radius: 50%;
      width: 2px;
      display:inline-block;
    }

    .circle_red {

      padding: 10px 11px;
      background: red;
      height: 2px;
      border-radius: 50%;
      width: 2px;
      display:inline-block;
    }

    .page{
  max-width: 60em;
  margin: 0 auto;
}
table th,
table td{
  text-align: left;
}
table.layout{
  width: 100%;
  border-collapse: collapse;
}
table.display{
  margin: 1em 0;
}
table.display th,
table.display td{
  border: 1px solid #B3BFAA;
  padding: .5em 1em;
}

table.display th{ background: #D5E0CC; }
table.display td{ background: #fff; }

table.responsive-table{
  box-shadow: 0 1px 10px rgba(0, 0, 0, 0.2);
}

@media (max-width: 30em){
    table.responsive-table{
      box-shadow: none;
    }
    table.responsive-table thead{
      display: none;
    }
  table.display th,
  table.display td{
    padding: .5em;
  }

  table.responsive-table td:nth-child(1):before{
    content: 'Number';
  }
  table.responsive-table td:nth-child(2):before{
    content: 'Name';
  }
  table.responsive-table td:nth-child(1),
  table.responsive-table td:nth-child(2){
    padding-left: 25%;
  }
  table.responsive-table td:nth-child(1):before,
  table.responsive-table td:nth-child(2):before{
    position: absolute;
    left: .5em;
    font-weight: bold;
  }

    table.responsive-table tr,
    table.responsive-table td{
        display: block;
    }
    table.responsive-table tr{
        position: relative;
        margin-bottom: 1em;
    box-shadow: 0 1px 10px rgba(0, 0, 0, 0.2);
    }
    table.responsive-table td{
        border-top: none;
    }
    table.responsive-table td.jobdata{
        background: #D5E0CC;
        border-top: 1px solid #B3BFAA;
    }
    table.responsive-table td.actions{
        position: absolute;
        top: 0;
        right: 0;
        border: none;
        background: none;
    }
}
    </style>
    <link href="css/skeleton.css" rel="stylesheet"/>
</head>
<body>

<div>
    <span>Settings</span>

    <div>
        <span>Maximum numbers allowed in transit</span><input type="text" value="8"/>
    </div>
    <div>
        <span>Largest filesize allowed for upload</span><input type="text" value="1GB"/>
    </div>


</div>

<br  />
<div class="container">
    <div class="row">
        <div class="four columns">
            <div id="domain1">
                <span>Domain 1</span>

                    <div>
                        VM1:<span id="vm1" class="circle_green">
                        </span>
                    </div>

                    <div>
                        VM2:<span id="vm2" class="circle_red">
                        </span>
                    </div>
                    <div>
                        VM3:<span id="vm3" class="circle_green">
                        </span>
                    </div>


                    <div style="padding-left:20px"><span>Layer 2</span>
                        <meter class="layer2" style="" min="0" max="1" value=".25">25%</meter> 25% used
                    </div>
                    <div style="padding-left:20px"><span>Layer 3</span>
                        <meter class="layer3" style="" min="0" max="1" value=".25">25%</meter> 25% used
                    </div>

            </div>
            <br  />
            <div id="domain2">
                <span>Domain 2</span>
                <div>
                    VM1:<span id="vm4" class="circle_green">
                    </span>
                </div>

                <div>
                    VM2:<span id="vm5" class="circle_red">
                    </span>
                </div>
                <div>
                    VM3:<span id="vm6" class="circle_green">
                    </span>
                </div>
                <div style="padding-left:20px"><span>Layer 2</span>
                    <meter class="layer2" style="" min="0" max="1" value=".25">25%</meter> 25% used
                </div>
                <div style="padding-left:20px"><span>Layer 3</span>
                    <meter class="layer3" style="" min="0" max="1" value=".25">25%</meter> 25% used
                </div>
            </div>
            <br  />
            <div id="domain3">
                <span>Domain 3</span>
                <div>
                    VM1:<span id="vm7" class="circle_green">
                    </span>
                </div>

                <div>
                    VM2:<span id="vm8" class="circle_red">
                    </span>
                </div>
                <div>
                    VM3:<span id="vm9" class="circle_green">
                    </span>
                </div>
                <div style="padding-left:20px"><span>Layer 2</span>
                    <meter class="layer2" style="" min="0" max="1" value=".25">25%</meter> 25% used
                </div>
                <div style="padding-left:20px"><span>Layer 3</span>
                    <meter class="layer3" style="" min="0" max="1" value=".25">25%</meter> 25% used
                </div>

                <button id="refresh">Refresh</button>
            </div>
        </div>
        <div class="eight columns">
            <table id="jobs" class="layout display responsive-table">
                <thead>
                    <tr>
                        <th>Person</th>
                        <th>Job name</th>
                        <th>Size of Job</th>
                        <th>Security Specs</th>
                        <th>Current Processing time</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="jobdata">Shelly</td>
                        <td class="jobdata">Bio lab results</td>
                        <td class="jobdata">500MB</td>
                        <td class="jobdata">DCL1</td>
                        <td class="jobdata">0:00</td>

                    </tr>
                    <tr>
                        <td class="jobdata">Shelly</td>
                        <td class="jobdata">Bio lab results</td>
                        <td class="jobdata">500MB</td>
                        <td class="jobdata">DCL1</td>
                        <td class="jobdata">0:00</td>

                    </tr>
                    <tr>
                        <td class="jobdata">Shelly</td>
                        <td class="jobdata">Bio lab results</td>
                        <td class="jobdata">500MB</td>
                        <td class="jobdata">DCL1</td>
                        <td class="jobdata">0:00</td>

                    </tr>
                    <tr>
                        <td class="jobdata">Shelly</td>
                        <td class="jobdata">Bio lab results</td>
                        <td class="jobdata">500MB</td>
                        <td class="jobdata">DCL1</td>
                        <td class="jobdata">0:00</td>

                    </tr>
                </tbody>
            </table>
        </div>
        <div class="six columns">
        </div>
    </div>
</div>

<script type="text/javascript">

let busyCheck = (vm, busy) => {
    if(busy){
        if(vm.classList.contains("circle_green")){
            vm.className = "circle_red";
        }
    }
    else{
        if(vm.classList.contains("circle_red")){
            vm.className = "circle_green";
        }
    }
}

let layerUpdate = (domain, layer) => {
    let meters = document.getElementById(domain).getElementsByTagName("meter")
    // console.log(layer)
    for(let i = 0; i < 2; i++){
        meters[i].value = layer[i]
        // console.log(meters[i].value);
        // console.log(layer[i])
    }

}

let populateTable = (jobs) => {
    console.log(jobs)
    let table = document.getElementById("jobs");
    for(let i = 0; i < jobs.length; i++){

    }
}

let updateStats = (data) => {


    // console.log(data[0])
    for(let i = 0; i < data[0].length; i++){
        let domain = data[0][i].domain
        for(let j = 0; j < data[0][i].vms.length; j++){

            let vm = document.getElementById(data[0][i].vms[j].name)
            let busy = data[0][i].vms[j].busy
            // console.log("busy status ", busy)
            let layers = data[0][i].layers
            // console.log(jobs)

            // console.log(document.getElementById(domain))
            busyCheck(vm, busy);
            layerUpdate(domain, layers)

            // console.log(data[i].layers)
            // console.log(vm.classList)

        }
    }
}
let element = document.getElementById("refresh");
element.addEventListener('click', function() { /* do stuff here*/
    fetch("/network-stats") // Call the fetch function passing the url of the API as a parameter
    .then(
  function(response) {
    if (response.status !== 200) {
      console.log('Looks like there was a problem. Status Code: ' +
        response.status);
      return;
    }

    // Examine the text in the response
    response.json().then(function(data) {
      updateStats(data);
      populateTable(data[1])
    });
  }
)
.catch(function(err) {
  console.log('Fetch Error :-S', err);
});

});





</script>
</body>
</html>
